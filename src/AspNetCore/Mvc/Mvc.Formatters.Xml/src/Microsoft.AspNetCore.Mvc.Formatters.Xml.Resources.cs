// <auto-generated>
using System.Reflection;


namespace Microsoft.AspNetCore.Mvc.Formatters.Xml
{
    internal static partial class Resources
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(Resources)));
        internal static global::System.Globalization.CultureInfo Culture { get; set; }

        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static string GetResourceString(string resourceKey, string defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture);

        private static string GetResourceString(string resourceKey, string[] formatterNames)
        {
           var value = GetResourceString(resourceKey);
           if (formatterNames != null)
           {
               for (var i = 0; i < formatterNames.Length; i++)
               {
                   value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
               }
           }
           return value;
        }

        /// <summary>The type must be an interface and must be or derive from '{0}'.</summary>
        internal static string EnumerableWrapperProvider_InvalidSourceEnumerableOfT => GetResourceString("EnumerableWrapperProvider_InvalidSourceEnumerableOfT");
        /// <summary>The type must be an interface and must be or derive from '{0}'.</summary>
        internal static string FormatEnumerableWrapperProvider_InvalidSourceEnumerableOfT(object p0)
           => string.Format(Culture, GetResourceString("EnumerableWrapperProvider_InvalidSourceEnumerableOfT"), p0);

        /// <summary>An error occurred while deserializing input data.</summary>
        internal static string ErrorDeserializingInputData => GetResourceString("ErrorDeserializingInputData");
        /// <summary>{0} does not recognize '{1}', so instead use '{2}' with '{3}' set to '{4}' for value type property '{5}' on type '{6}'.</summary>
        internal static string RequiredProperty_MustHaveDataMemberRequired => GetResourceString("RequiredProperty_MustHaveDataMemberRequired");
        /// <summary>{0} does not recognize '{1}', so instead use '{2}' with '{3}' set to '{4}' for value type property '{5}' on type '{6}'.</summary>
        internal static string FormatRequiredProperty_MustHaveDataMemberRequired(object p0, object p1, object p2, object p3, object p4, object p5, object p6)
           => string.Format(Culture, GetResourceString("RequiredProperty_MustHaveDataMemberRequired"), p0, p1, p2, p3, p4, p5, p6);

        /// <summary>The object to be wrapped must be of type '{0}' but was of type '{1}'.</summary>
        internal static string WrapperProvider_MismatchType => GetResourceString("WrapperProvider_MismatchType");
        /// <summary>The object to be wrapped must be of type '{0}' but was of type '{1}'.</summary>
        internal static string FormatWrapperProvider_MismatchType(object p0, object p1)
           => string.Format(Culture, GetResourceString("WrapperProvider_MismatchType"), p0, p1);


    }
}
