// <auto-generated>
using System.Reflection;


namespace Microsoft.AspNetCore.Session
{
    internal static partial class Resources
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(Resources)));
        internal static global::System.Globalization.CultureInfo Culture { get; set; }

        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static string GetResourceString(string resourceKey, string defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture);

        private static string GetResourceString(string resourceKey, string[] formatterNames)
        {
           var value = GetResourceString(resourceKey);
           if (formatterNames != null)
           {
               for (var i = 0; i < formatterNames.Length; i++)
               {
                   value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
               }
           }
           return value;
        }

        /// <summary>The key cannot be longer than '{0}' when encoded with UTF-8.</summary>
        internal static string Exception_KeyLengthIsExceeded => GetResourceString("Exception_KeyLengthIsExceeded");
        /// <summary>The key cannot be longer than '{0}' when encoded with UTF-8.</summary>
        internal static string FormatException_KeyLengthIsExceeded(object p0)
           => string.Format(Culture, GetResourceString("Exception_KeyLengthIsExceeded"), p0);

        /// <summary>The session cannot be established after the response has started.</summary>
        internal static string Exception_InvalidSessionEstablishment => GetResourceString("Exception_InvalidSessionEstablishment");
        /// <summary>The value cannot be serialized in two bytes.</summary>
        internal static string Exception_InvalidToSerializeIn2Bytes => GetResourceString("Exception_InvalidToSerializeIn2Bytes");
        /// <summary>The value cannot be serialized in three bytes.</summary>
        internal static string Exception_InvalidToSerializeIn3Bytes => GetResourceString("Exception_InvalidToSerializeIn3Bytes");
        /// <summary>The value cannot be negative.</summary>
        internal static string Exception_NumberShouldNotBeNegative => GetResourceString("Exception_NumberShouldNotBeNegative");
        /// <summary>Argument cannot be null or empty string.</summary>
        internal static string ArgumentCannotBeNullOrEmpty => GetResourceString("ArgumentCannotBeNullOrEmpty");

    }
}
