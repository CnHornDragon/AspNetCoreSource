// <auto-generated>
using System.Reflection;


namespace Microsoft.AspNetCore.Rewrite
{
    internal static partial class Resources
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(Resources)));
        internal static global::System.Globalization.CultureInfo Culture { get; set; }

        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static string GetResourceString(string resourceKey, string defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture);

        private static string GetResourceString(string resourceKey, string[] formatterNames)
        {
           var value = GetResourceString(resourceKey);
           if (formatterNames != null)
           {
               for (var i = 0; i < formatterNames.Length; i++)
               {
                   value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
               }
           }
           return value;
        }

        /// <summary>Error adding a mod_rewrite rule. The change environment flag is not supported.</summary>
        internal static string Error_ChangeEnvironmentNotSupported => GetResourceString("Error_ChangeEnvironmentNotSupported");
        /// <summary>Could not parse integer from value '{0}'.</summary>
        internal static string Error_CouldNotParseInteger => GetResourceString("Error_CouldNotParseInteger");
        /// <summary>Could not parse integer from value '{0}'.</summary>
        internal static string FormatError_CouldNotParseInteger(object p0)
           => string.Format(Culture, GetResourceString("Error_CouldNotParseInteger"), p0);

        /// <summary>Index out of range for backreference: '{0}' at string index: '{1}'</summary>
        internal static string Error_InputParserIndexOutOfRange => GetResourceString("Error_InputParserIndexOutOfRange");
        /// <summary>Index out of range for backreference: '{0}' at string index: '{1}'</summary>
        internal static string FormatError_InputParserIndexOutOfRange(object p0, object p1)
           => string.Format(Culture, GetResourceString("Error_InputParserIndexOutOfRange"), p0, p1);

        /// <summary>Cannot parse '{0}' to integer at string index: '{1}'</summary>
        internal static string Error_InputParserInvalidInteger => GetResourceString("Error_InputParserInvalidInteger");
        /// <summary>Cannot parse '{0}' to integer at string index: '{1}'</summary>
        internal static string FormatError_InputParserInvalidInteger(object p0, object p1)
           => string.Format(Culture, GetResourceString("Error_InputParserInvalidInteger"), p0, p1);

        /// <summary>Missing close brace for parameter at string index: '{0}'</summary>
        internal static string Error_InputParserMissingCloseBrace => GetResourceString("Error_InputParserMissingCloseBrace");
        /// <summary>Missing close brace for parameter at string index: '{0}'</summary>
        internal static string FormatError_InputParserMissingCloseBrace(object p0)
           => string.Format(Culture, GetResourceString("Error_InputParserMissingCloseBrace"), p0);

        /// <summary>Missing backreference for parameter at string index: '{0}'</summary>
        internal static string Error_InputParserNoBackreference => GetResourceString("Error_InputParserNoBackreference");
        /// <summary>Missing backreference for parameter at string index: '{0}'</summary>
        internal static string FormatError_InputParserNoBackreference(object p0)
           => string.Format(Culture, GetResourceString("Error_InputParserNoBackreference"), p0);

        /// <summary>Unrecognized parameter type: '{0}', terminated at string index: '{1}'</summary>
        internal static string Error_InputParserUnrecognizedParameter => GetResourceString("Error_InputParserUnrecognizedParameter");
        /// <summary>Unrecognized parameter type: '{0}', terminated at string index: '{1}'</summary>
        internal static string FormatError_InputParserUnrecognizedParameter(object p0, object p1)
           => string.Format(Culture, GetResourceString("Error_InputParserUnrecognizedParameter"), p0, p1);

        /// <summary>Syntax error for integers in comparison.</summary>
        internal static string Error_IntegerMatch_FormatExceptionMessage => GetResourceString("Error_IntegerMatch_FormatExceptionMessage");
        /// <summary>Error parsing the mod_rewrite rule. The cookie flag (CO) has an incorrect format '{0}'.</summary>
        internal static string Error_InvalidChangeCookieFlag => GetResourceString("Error_InvalidChangeCookieFlag");
        /// <summary>Error parsing the mod_rewrite rule. The cookie flag (CO) has an incorrect format '{0}'.</summary>
        internal static string FormatError_InvalidChangeCookieFlag(object p0)
           => string.Format(Culture, GetResourceString("Error_InvalidChangeCookieFlag"), p0);

        /// <summary>Could not parse the mod_rewrite file. Message: '{0}'.  Line number '{1}'.</summary>
        internal static string Error_ModRewriteParseError => GetResourceString("Error_ModRewriteParseError");
        /// <summary>Could not parse the mod_rewrite file. Message: '{0}'.  Line number '{1}'.</summary>
        internal static string FormatError_ModRewriteParseError(object p0, object p1)
           => string.Format(Culture, GetResourceString("Error_ModRewriteParseError"), p0, p1);

        /// <summary>Could not parse the mod_rewrite file.  Line number '{0}'.</summary>
        internal static string Error_ModRewriteGeneralParseError => GetResourceString("Error_ModRewriteGeneralParseError");
        /// <summary>Could not parse the mod_rewrite file.  Line number '{0}'.</summary>
        internal static string FormatError_ModRewriteGeneralParseError(object p0)
           => string.Format(Culture, GetResourceString("Error_ModRewriteGeneralParseError"), p0);

        /// <summary>Could not parse the UrlRewrite file. Message: '{0}'. Line number '{1}': '{2}'.</summary>
        internal static string Error_UrlRewriteParseError => GetResourceString("Error_UrlRewriteParseError");
        /// <summary>Could not parse the UrlRewrite file. Message: '{0}'. Line number '{1}': '{2}'.</summary>
        internal static string FormatError_UrlRewriteParseError(object p0, object p1, object p2)
           => string.Format(Culture, GetResourceString("Error_UrlRewriteParseError"), p0, p1, p2);

        /// <summary>Rules using the '{0}' server variable are not supported</summary>
        internal static string Error_UnsupportedServerVariable => GetResourceString("Error_UnsupportedServerVariable");
        /// <summary>Rules using the '{0}' server variable are not supported</summary>
        internal static string FormatError_UnsupportedServerVariable(object p0)
           => string.Format(Culture, GetResourceString("Error_UnsupportedServerVariable"), p0);


    }
}
