// <auto-generated>
using System.Reflection;


namespace Microsoft.Extensions.Configuration.Binder
{
    internal static partial class Resources
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(Resources)));
        internal static global::System.Globalization.CultureInfo Culture { get; set; }

        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static string GetResourceString(string resourceKey, string defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture);

        private static string GetResourceString(string resourceKey, string[] formatterNames)
        {
           var value = GetResourceString(resourceKey);
           if (formatterNames != null)
           {
               for (var i = 0; i < formatterNames.Length; i++)
               {
                   value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
               }
           }
           return value;
        }

        /// <summary>Cannot create instance of type '{0}' because it is either abstract or an interface.</summary>
        internal static string Error_CannotActivateAbstractOrInterface => GetResourceString("Error_CannotActivateAbstractOrInterface");
        /// <summary>Cannot create instance of type '{0}' because it is either abstract or an interface.</summary>
        internal static string FormatError_CannotActivateAbstractOrInterface(object p0)
           => string.Format(Culture, GetResourceString("Error_CannotActivateAbstractOrInterface"), p0);

        /// <summary>Failed to convert configuration value at '{0}' to type '{1}'.</summary>
        internal static string Error_FailedBinding => GetResourceString("Error_FailedBinding");
        /// <summary>Failed to convert configuration value at '{0}' to type '{1}'.</summary>
        internal static string FormatError_FailedBinding(object p0, object p1)
           => string.Format(Culture, GetResourceString("Error_FailedBinding"), p0, p1);

        /// <summary>Failed to create instance of type '{0}'.</summary>
        internal static string Error_FailedToActivate => GetResourceString("Error_FailedToActivate");
        /// <summary>Failed to create instance of type '{0}'.</summary>
        internal static string FormatError_FailedToActivate(object p0)
           => string.Format(Culture, GetResourceString("Error_FailedToActivate"), p0);

        /// <summary>Cannot create instance of type '{0}' because it is missing a public parameterless constructor.</summary>
        internal static string Error_MissingParameterlessConstructor => GetResourceString("Error_MissingParameterlessConstructor");
        /// <summary>Cannot create instance of type '{0}' because it is missing a public parameterless constructor.</summary>
        internal static string FormatError_MissingParameterlessConstructor(object p0)
           => string.Format(Culture, GetResourceString("Error_MissingParameterlessConstructor"), p0);

        /// <summary>Cannot create instance of type '{0}' because multidimensional arrays are not supported.</summary>
        internal static string Error_UnsupportedMultidimensionalArray => GetResourceString("Error_UnsupportedMultidimensionalArray");
        /// <summary>Cannot create instance of type '{0}' because multidimensional arrays are not supported.</summary>
        internal static string FormatError_UnsupportedMultidimensionalArray(object p0)
           => string.Format(Culture, GetResourceString("Error_UnsupportedMultidimensionalArray"), p0);


    }
}
