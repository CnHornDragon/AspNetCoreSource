// <auto-generated>
using System.Reflection;


namespace Microsoft.Extensions.Configuration.UserSecrets
{
    internal static partial class Resources
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(Resources)));
        internal static global::System.Globalization.CultureInfo Culture { get; set; }

        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static string GetResourceString(string resourceKey, string defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture);

        private static string GetResourceString(string resourceKey, string[] formatterNames)
        {
           var value = GetResourceString(resourceKey);
           if (formatterNames != null)
           {
               for (var i = 0; i < formatterNames.Length; i++)
               {
                   value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
               }
           }
           return value;
        }

        /// <summary>Value cannot be null or an empty string.</summary>
        internal static string Common_StringNullOrEmpty => GetResourceString("Common_StringNullOrEmpty");
        /// <summary>Invalid character '{0}' found in the user secrets ID at index '{1}'.</summary>
        internal static string Error_Invalid_Character_In_UserSecrets_Id => GetResourceString("Error_Invalid_Character_In_UserSecrets_Id");
        /// <summary>Invalid character '{0}' found in the user secrets ID at index '{1}'.</summary>
        internal static string FormatError_Invalid_Character_In_UserSecrets_Id(object p0, object p1)
           => string.Format(Culture, GetResourceString("Error_Invalid_Character_In_UserSecrets_Id"), p0, p1);

        /// <summary>Could not find 'UserSecretsIdAttribute' on assembly '{0}'.
        /// Check that the project for '{0}' has set the 'UserSecretsId' build property.
        /// If the 'UserSecretsId' property is already set then add a reference to the Microsoft.Extensions.Configuration.UserSecret ...</summary>
        internal static string Error_Missing_UserSecretsIdAttribute => GetResourceString("Error_Missing_UserSecretsIdAttribute");
        /// <summary>Could not find 'UserSecretsIdAttribute' on assembly '{0}'.
        /// Check that the project for '{0}' has set the 'UserSecretsId' build property.
        /// If the 'UserSecretsId' property is already set then add a reference to the Microsoft.Extensions.Configuration.UserSecret ...</summary>
        internal static string FormatError_Missing_UserSecretsIdAttribute(object p0)
           => string.Format(Culture, GetResourceString("Error_Missing_UserSecretsIdAttribute"), p0);


    }
}
