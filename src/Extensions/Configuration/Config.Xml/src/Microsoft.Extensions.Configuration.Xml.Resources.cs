// <auto-generated>
using System.Reflection;


namespace Microsoft.Extensions.Configuration.Xml
{
    internal static partial class Resources
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(Resources)));
        internal static global::System.Globalization.CultureInfo Culture { get; set; }

        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static string GetResourceString(string resourceKey, string defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture);

        private static string GetResourceString(string resourceKey, string[] formatterNames)
        {
           var value = GetResourceString(resourceKey);
           if (formatterNames != null)
           {
               for (var i = 0; i < formatterNames.Length; i++)
               {
                   value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
               }
           }
           return value;
        }

        /// <summary>File path must be a non-empty string.</summary>
        internal static string Error_InvalidFilePath => GetResourceString("Error_InvalidFilePath");
        /// <summary>A duplicate key '{0}' was found.{1}</summary>
        internal static string Error_KeyIsDuplicated => GetResourceString("Error_KeyIsDuplicated");
        /// <summary>A duplicate key '{0}' was found.{1}</summary>
        internal static string FormatError_KeyIsDuplicated(object p0, object p1)
           => string.Format(Culture, GetResourceString("Error_KeyIsDuplicated"), p0, p1);

        /// <summary>XML namespaces are not supported.{0}</summary>
        internal static string Error_NamespaceIsNotSupported => GetResourceString("Error_NamespaceIsNotSupported");
        /// <summary>XML namespaces are not supported.{0}</summary>
        internal static string FormatError_NamespaceIsNotSupported(object p0)
           => string.Format(Culture, GetResourceString("Error_NamespaceIsNotSupported"), p0);

        /// <summary>Unsupported node type '{0}' was found.{1}</summary>
        internal static string Error_UnsupportedNodeType => GetResourceString("Error_UnsupportedNodeType");
        /// <summary>Unsupported node type '{0}' was found.{1}</summary>
        internal static string FormatError_UnsupportedNodeType(object p0, object p1)
           => string.Format(Culture, GetResourceString("Error_UnsupportedNodeType"), p0, p1);

        /// <summary>Line {0}, position {1}.</summary>
        internal static string Msg_LineInfo => GetResourceString("Msg_LineInfo");
        /// <summary>Line {0}, position {1}.</summary>
        internal static string FormatMsg_LineInfo(object p0, object p1)
           => string.Format(Culture, GetResourceString("Msg_LineInfo"), p0, p1);


    }
}
